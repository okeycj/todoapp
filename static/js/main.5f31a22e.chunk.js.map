{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f31a22e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header style={headerStyle}>\r\n\t\t\t<h1>TodoList</h1>\r\n\t\t\t<Link style={linkStyle} to=\"/todoapp/\">Home</Link> | <Link style={linkStyle} to=\"/todoapp/about\">About</Link>\r\n\t\t</header>\r\n\t)\r\n}\r\nconst headerStyle = {\r\n\tbackground: '#333',\r\n\tcolor: '#fff',\r\n\ttextAlign: 'center',\r\n\tpadding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n\tcolor: '#fff',\r\n\ttextDecoration: 'none'\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoItem extends Component {\r\n  getStyle = () => {\r\n  \treturn {\r\n  \t\tbackground: '#f4f4f4',\r\n  \t\tpadding: '10px',\r\n  \t\tborderBottom: '1px #ccc dotted',\r\n\t\ttextDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n\t}\r\n  }\r\n\r\n  render() {\r\n  \tconst { id, title } = this.props.todo;\r\n    return (\r\n    \t<div style={this.getStyle()}>\r\n    \t\t<p>\r\n    \t\t\t<input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\r\n\t    \t\t{ title }\r\n\t    \t\t<button style={btnStyle} onClick={this.props.delTodo.bind(this, id)} >x</button>\r\n    \t\t</p>\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n\ttodo: PropTypes.object.isRequired,\r\n\tmarkComplete: PropTypes.func.isRequired,\r\n\tdelTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nconst btnStyle = {\r\n\tbackground: '#ff0000',\r\n\tcolor: '#fff',\r\n\tborder: 'none',\r\n\tpadding: '5px 12px',\r\n\tborderRadius: '50%',\r\n\tcursor: 'pointer',\r\n\tfloat: 'right'\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  \r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n    \t<TodoItem key={todo.id} todo={todo} delTodo={this.props.delTodo} markComplete={this.props.markComplete} />\r\n    ))\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n\ttodos: PropTypes.array.isRequired,\r\n\tmarkComplete: PropTypes.func.isRequired,\r\n\tdelTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddTodo extends Component {\r\n\tstate = {\r\n\t\ttitle: ''\r\n\t}\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.addTodo(this.state.title);\r\n\t\tthis.setState({ title: '' });\r\n\t}\r\n\tonChange = (e) => this.setState({\r\n\t\t[e.target.name]: e.target.value\r\n\t});\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='title'\r\n\t\t\t\t\tstyle={{ flex: '10', padding: '5px' }}\r\n\t\t\t\t\tplaceholder=\"Add Todo...\"\r\n\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\tonChange={this.onChange} \r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tvalue='Submit'\r\n\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\tstyle={{flex: '1'}} \r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nAddTodo.propTypes = {\r\n\taddTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo","import React from 'react'\r\n\r\nfunction About() {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h1>About</h1>\r\n\t\t\t<p>This is the TodoList app v1.0.0. it is part of a React course</p>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n// import uuid from 'uuid';\n\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }))\n  }\n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    }) })\n  }\n\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));        \n  }\n\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }))\n    \n  }\n\n  render() {\n    return(\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/todoapp/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodo={this.addTodo}/>\n              <Todos todos={this.state.todos} delTodo={this.delTodo} markComplete={this.markComplete} />\n            </React.Fragment>\n          )} /> \n          <Route path=\"/todoapp/about\" component={About} />   \n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}